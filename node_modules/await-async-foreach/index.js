const _ = require('lodash');
const Async = require('async');

const AsyncForEach = async (collection, handle, flow = 'waterfall', concurency = 5) => {
  return new Promise((resolve, reject) => {
    const task = [];
    _.forEach(collection, async (v, k) => {
      task.push((callback) => {
        (async () => {
          await handle(v, k);
          callback();
        })();
      });
    });
    if (flow === 'parallel') {
      Async.parallelLimit(task, concurency, (err) => {
        resolve();
      });
    } else {
      Async.waterfall(task, (err) => {
        resolve();
      });
    }
  });
};

module.exports = AsyncForEach;